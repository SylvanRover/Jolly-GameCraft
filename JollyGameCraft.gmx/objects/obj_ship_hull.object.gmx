<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_hull_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Variables

phy_fixed_rotation = true;

dir = direction;

hp_current = 100;
hp_max = 100;
healthBarActive = false;
died = false;

sail_taut = 0.5;
intoTheWind = 0;
withTheWind = 0;

ship_station_wheel = true;
ship_station_sail = true;
ship_station_crowsnest = true;
ship_station_stability = true;

// Movement
xAxis = 0;
yAxis = 0;
magnitude = 0;
speedX = 5;
speedY = 3;
speedX_max = 5;
speedY_max = 3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_zDepth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_zDepthCorrection</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GamePad Controls
//if (obj_player_controller.settingsOpen) || (hp_current &lt;= 0) exit;

mbLeftRelease = mouse_check_button_released(mb_left);
mbLeftCheck = mouse_check_button(mb_left);

xAxis = gamepad_axis_value(0,gp_axislh);
yAxis = gamepad_axis_value(0,gp_axislv);
magnitude = point_distance(0, 0, xAxis, yAxis)

phy_speed_x = lengthdir_x(speedX, direction);
phy_speed_y = lengthdir_y(speedY, direction);


if (gamepad_is_supported()
&amp;&amp; gamepad_is_connected(0)){
    // Movement
    if gamepad_is_connected(0) gamepad_set_axis_deadzone(0, 0.2);
    button_target = gamepad_button_check_pressed (0, gp_stickr);
    
    /*if (magnitude &gt;= 0.6){
        if(abs(xAxis) &gt; 0.44) phy_speed_x = speedX * xAxis;
        else phy_speed_x = 0;
        if(abs(yAxis) &gt; 0.44) phy_speed_y = speedY * yAxis;
        else phy_speed_y = 0;
    }
    else{
        phy_speed_x = 0;
        phy_speed_y = 0;
    }*/
  
    axis_h = gamepad_axis_value(0, gp_axislh)
    axis_v = gamepad_axis_value(0, gp_axislv)
    dist = point_distance(0, 0, axis_h, axis_v);
    
    if dist &gt; 0.18{
        direction -= gamepad_axis_value(0,gp_axislh) * 5;
    }
    
    // Direction 
    /*if dist &gt; 0.18{
        x += gamepad_axis_value(0,gp_axislh) * speedX;
        y += gamepad_axis_value(0,gp_axislv) * speedY;
     
        dx= (gamepad_axis_value(0, gp_axislh) &gt; 0) - (gamepad_axis_value(0, gp_axislh) &lt; 0)
        dy= (gamepad_axis_value(0, gp_axislv) &gt; 0) - (gamepad_axis_value(0, gp_axislv) &lt; 0)
     
     
        if(dx != 0 or dy != 0){
            dir = point_direction(0,0,dx, dy);
        }
     
        direction = point_direction(0, 0, gamepad_axis_value(0, gp_axislh), gamepad_axis_value(0, gp_axislv));
        direction = direction mod 360;
    }
    if (gamepad_axis_value(0, gp_axisrv)!=0 || gamepad_axis_value(0, gp_axisrh)!=0){
        x += gamepad_axis_value(0,gp_axislh) * speedX;
        y += gamepad_axis_value(0,gp_axislv) * speedY;
     
        dx= (gamepad_axis_value(0, gp_axisrh) &gt; 0) - (gamepad_axis_value(0, gp_axisrh) &lt; 0)
        dy= (gamepad_axis_value(0, gp_axisrv) &gt; 0) - (gamepad_axis_value(0, gp_axisrv) &lt; 0)
     
     
        if(dx != 0 or dy != 0){
            dir = point_direction(0,0,dx, dy);
        }
     
        direction = point_direction(0, 0, gamepad_axis_value(0, gp_axisrh), gamepad_axis_value(0, gp_axisrv));
        direction = direction mod 360;
    }*/
    
    //Sprite Directions
    d = (direction + 22.5) div 45;
    
    switch (d) {     
        case 0: sprite_index = spr_ship_hull_0; break;    
        case 1: sprite_index = spr_ship_hull_45;  break;    
        case 2: sprite_index = spr_ship_hull_90; break;    
        case 3: sprite_index = spr_ship_hull_135;  break;    
        case 4: sprite_index = spr_ship_hull_180;  break;
        case 5: sprite_index = spr_ship_hull_225;  break;
        case 6: sprite_index = spr_ship_hull_270;  break;
        case 7: sprite_index = spr_ship_hull_315;  break;
    }
        
        //if (direction &gt;= 337.5) sprite_index = spr_ship_hull_0;
        
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wind &amp; Sails

intoTheWind = direction - obj_wind.direction;
withTheWind = direction - obj_wind.direction;

if (intoTheWind &lt; 0) intoTheWind += 360;
if (withTheWind &lt; 0) withTheWind += 360;

//if (intoTheWind &lt;= 5){
//}

if gamepad_button_check(0, gp_shoulderr){
    if (sail_taut &gt;= 1) sail_taut = 1;
    if (sail_taut &lt;= 0) sail_taut = 0;
    sail_taut += .1;    
    speedX = abs(speedX_max * sail_taut);
    speedY = abs(speedY_max * sail_taut);
}
if gamepad_button_check(0, gp_shoulderrb){
    if (sail_taut &gt;= 1) sail_taut = 1;
    if (sail_taut &lt;= 0) sail_taut = 0;
    sail_taut -= .1;    
    speedX = abs(speedX_max * sail_taut);
    speedY = abs(speedY_max * sail_taut);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Env">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>112,192</point>
    <point>176,160</point>
    <point>240,192</point>
    <point>176,224</point>
  </PhysicsShapePoints>
</object>
